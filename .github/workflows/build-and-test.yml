name: Java CI with Maven - Build and Test

on:
  push:
    branches: [ "main", "master" ]
  pull_request:
    branches: [ "main", "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    # Testler için bir PostgreSQL veritabanı servisi başlat
    services:
      postgres:
        image: postgres:14-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: book_social_test_db
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build and Test with Maven
        # Testlere, az önce başlattığımız 'postgres' servisine ait
        # veritabanı bilgilerini veriyoruz.
        env:
          SPRING_DATASOURCE_URL: jdbc:postgresql://localhost:5432/book_social_test_db
          SPRING_DATASOURCE_USERNAME: testuser
          SPRING_DATASOURCE_PASSWORD: testpassword
          SPRING_JPA_HIBERNATE_DDL_AUTO: none
          SPRING_FLYWAY_SCHEMAS: book_social
          SPRING_FLYWAY_LOCATIONS: classpath:db/migration

        # pom.xml'in yerini -f ile belirtiyoruz
        run: mvn clean install -f base-code/pom.xml